name: Build Pipeline

## start the pipeline manually by entering version to release, this version will be the version of the artifact that is uploaded

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release"
        required: true
        default: ""

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Package.json info
        uses: rexdefuror/read-package-json@v1.0.5
      ## check if artifact with input version exists
      - name: Check if artifact exists
        uses: actions/github-script@v6
        with:
          script: |
            const artifact = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            const artifactExists = artifact.data.artifacts.some((artifact) => artifact.name === '${{ env.PACKAGE_NAME }}_v${{ github.event.inputs.version }}.zip')
            core.exportVariable('check_artifact', artifactExists)
      - name: Setup Node.js
        if: ${{ env.check_artifact == 'false' }}
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        if: ${{ env.check_artifact == 'false' }}
        run: npm ci
      - name: Build
        if: ${{ env.check_artifact == 'false' }}
        run: npm run build
      - name: Tag commit
        if: ${{ env.check_artifact == 'false' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = '${{ github.event.inputs.version }}'
            const tag = `v${version}`
            const commit = context.sha
            const owner = context.repo.owner
            const repo = context.repo.repo
            const tagExists = await github.rest.git.getRef({
              owner,
              repo,
              ref: `tags/${tag}`,
            })
            .then(() => true)
            .catch(() => false)
            if (tagExists) {
              console.log(`Tag ${tag} already exists`)
              core.exportVariable('tagging', false)
              return;
            }
            await github.rest.git.createRef({
              owner,
              repo,
              ref: `refs/tags/${tag}`,
              sha: commit,
            })
            console.log(`Tag ${tag} created`)
            core.exportVariable('tagging', true)
      - name: Upload artifact
        if: ${{ env.check_artifact == 'false' && env.tagging == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }}_v${{ github.event.inputs.version }}.zip
          path: ./dist
